name: Pytest-CPU
on:
  pull_request: {}
  workflow_dispatch: {}
jobs:
  pytest:
    timeout-minutes: 30
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - python_version: '3.8'
            container: mosaicml/pytorch:1.11.0_cpu-python3.8-ubuntu20.04
            markers: 'not daily and not gpu and not vision and not doctest'
            pytest_command: 'coverage run -m pytest'
          - python_version: '3.9'
            container: mosaicml/pytorch:1.12.1_cpu-python3.9-ubuntu20.04
            markers: 'not daily and not gpu and not vision and not doctest'
            pytest_command: 'coverage run -m pytest'
          - python_version: '3.9'
            container: mosaicml/pytorch_vision:1.12.1_cpu-python3.9-ubuntu20.04
            markers: 'not daily and not gpu and vision and not doctest'
            pytest_command: 'coverage run -m pytest'
          - python_version: '3.9'
            container: mosaicml/pytorch_vision:1.12.1_cpu-python3.9-ubuntu20.04
            markers: 'not daily and not gpu and not vision and doctest'
            pytest_command: 'coverage run -m pytest tests/test_docs.py'
          - python_version: '3.10'
            container: mosaicml/pytorch:1.13.0_cpu-python3.10-ubuntu20.04
            markers: 'not daily and not gpu and not vision and not doctest'
            pytest_command: 'coverage run -m pytest'
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          set -ex
          export PATH=/composer-python:$PATH
          python -m pip install --upgrade pip wheel
          python -m pip install -e .[all]
      - name: Run Tests
        id: tests
        run: |
          set -ex
          export PATH=/composer-python:$PATH
          export S3_BUCKET='mosaicml-internal-integration-testing'
          export SFTP_URI='sftp://mosaicml-integration-testing@s-c07c6cb0dd1441dbb.server.transfer.us-west-2.amazonaws.com/mosaicml-internal-integration-testing'
          export COMMON_ARGS="-v --durations=20 -m '${{ matrix.markers }}' --s3_bucket '$S3_BUCKET' --sftp_uri '$SFTP_URI'"

          make test PYTEST='${{ matrix.pytest_command }}' EXTRA_ARGS="$COMMON_ARGS --codeblocks"
          make test-dist PYTEST='${{ matrix.pytest_command }}' EXTRA_ARGS="$COMMON_ARGS" WORLD_SIZE=2

          python -m coverage combine
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ gihub.sha }}.coverage
      #     path: .coverage
