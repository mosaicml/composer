name: Build Production Docker Images
on:
  push:
    branches:
      - dev
      - main
      - release/**
  pull_request:
    branches:
      - dev
      - main
      - release/**
  workflow_call:
  workflow_dispatch: {}
defaults:
  run:
    working-directory: .
jobs:
  build-image-matrix:
    runs-on: ubuntu-20.04
    timeout-minutes: 2
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/setup-python@v4
        with:
          python_version: 3.9
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          BUILD_MATRIX=$(python .github/bin/gen_docker_matrix.py docker/build_matrix_new.yaml)
          echo $BUILD_MATRIX >> $GITHUB_OUTPUT
  build-images:
    needs: build-image-matrix
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
      matrix: ${{ fromJSON(needs.build-image-matrix.outputs.matrix) }}
    name: "${{ matrix.NAME }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Calculate Docker Image Variables
        run: |
          set -euxo pipefail

          ###################
          # Image config
          ###################
          echo "NAME: ${{ matrix.NAME }}"
          echo "BASE_IMAGE: ${{ matrix.BASE_IMAGE }}"
          echo "TARGET: ${{ matrix.TARGET }}"
          echo "PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}"
          echo "PYTORCH_VERSION: ${{ matrix.PYTORCH_VERSION }}"
          echo "TORCHTEXT_VERSION: ${{ matrix.TORCHTEXT_VERSION }}"
          echo "TORCHVISION_VERSION: ${{ matrix.TORCHVISION_VERSION }}"
          echo "CUDA_VERSION: ${{ matrix.CUDA_VERSION }}"
          echo "TAGS: ${{ matrix.TAGS }}"
          echo "UUID: ${{ matrix.UUID }}"

          ###################
          # Calculate the tag
          ###################
          if [[ ${GITHUB_REF} != "refs'heads'dev" ]]; then
            DOCKERHUB_REPO="mosaicml/jenkins-staging"
            IMAGE_TAG=${DOCKERHUB_REPO}:${{ matrix.UUID }}
          else
            IMAGE_TAG=${{ matrix.TAGS }}
          fi

          echo "IMAGE_TAG: ${IMAGE_TAG}"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> ${GITHUB_ENV}

      - name: Build and Push the Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ./docker
          tags: ${{ env.IMAGE_TAG }}
          target: ${{ matrix.TARGET }}
          push: false
          #cache-from: type=registry,ref=mosaicml/examples:${{ matrix.example }}-buildcache
          #cache-to: type=registry,ref=mosaicml/examples:${{ matrix.example }}-buildcache,mode=max
          build-args: |
            BASE_IMAGE=${{ matrix.BASE_IMAGE }}
            CUDA_VERSION=${{ matrix.CUDA_VERSION }}
            PYTHON_VERSION=${{ matrix.PYTHON_VERSION }}
            PYTORCH_VERSION=${{ matrix.PYTORCH_VERSION }}
            TORCHTEXT_VERSION=${{ matrix.TORCHTEXT_VERSION }}
            TORCHVISION_VERSION=${{ matrix.TORCHVISION_VERSION }}
